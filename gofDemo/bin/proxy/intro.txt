代理模式总结：
	1、代理(Proxy)是一种设计模式,提供了对目标对象另外的访问方式;即通过代理对象访问目标对象
	2、好处是:可以在目标对象实现的基础上,增强额外的功能操作,即扩展目标对象的功能。
	3、代理模式的关键点是:代理对象与目标对象.代理对象是对目标对象的扩展,并会调用目标对象。
	4、静态代理在使用时,需要定义接口或者父类,被代理对象与代理对象一起实现相同的接口或者是继承相同父类。
		静态代理总结:
			可以做到在不修改目标对象的功能前提下,对目标功能扩展.
		缺点:
			因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类,类太多.
				同时,一旦接口增加方法,目标对象与代理对象都要维护.
	5、动态代理有以下特点:
		代理对象,不需要实现接口
		代理对象的生成,是利用JDK的API,动态的在内存中构建代理对象(需要我们指定创建代理对象/目标对象实现的接口的类型)
		动态代理也叫做:JDK代理,接口代理
		总结:代理对象不需要实现接口,但是目标对象一定要实现接口,否则不能用动态代理
	6、有时候目标对象只是一个单独的对象,并没有实现任何的接口,这个时候就可以使用以目标对象子类的方式类实现代理,
		这种方法就叫做:Cglib代理。Cglib代理,也叫作子类代理,它是在内存中构建一个子类对象从而实现对目标对象功能的扩展。
	   Cglib子类代理实现方法:
			需要引入cglib的jar文件,但是Spring的核心包中已经包括了Cglib功能,所以直接引入pring-core-3.2.5.jar即可.
			引入功能包后,就可以在内存中动态构建子类
			代理的类不能为final,否则报错
			目标对象的方法如果为final/static,那么就不会被拦截,即不会执行目标对象额外的业务方法。
	7、在Spring的AOP编程中:
		如果加入容器的目标对象有实现接口,用JDK代理(动态代理)
		如果目标对象没有实现接口,用Cglib代理